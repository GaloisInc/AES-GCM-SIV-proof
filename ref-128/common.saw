

let allocValT name ty =
      do { ptr <- crucible_alloc ty;
           val <- crucible_fresh_var name ty;
           crucible_points_to ptr (crucible_term val);
           return (ptr,val);
         };

let allocArray name elN elT = allocValT name (llvm_array elN elT);

let allocVal name str = allocValT name (llvm_type str);


let proving x y =
  do { print (str_concat "Validating " x);
       time y;
     };


let {{
// To little endian byte representation
toBytes : {n} (fin n) => [8 * n] -> [n][8]
toBytes bits = reverse (split bits)

// A litle endian bytes, to a bit vector.
fromBytes : {n} (fin n) => [n][8] -> [8 * n]
fromBytes bytes = join (reverse bytes)


}};



